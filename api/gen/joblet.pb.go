// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.1
// source: joblet.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Jobs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*Job                 `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jobs) Reset() {
	*x = Jobs{}
	mi := &file_joblet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jobs) ProtoMessage() {}

func (x *Jobs) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jobs.ProtoReflect.Descriptor instead.
func (*Jobs) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{0}
}

func (x *Jobs) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU        int32                  `protobuf:"varint,4,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores      string                 `protobuf:"bytes,5,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory     int32                  `protobuf:"varint,6,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS      int32                  `protobuf:"varint,7,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,11,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime string                 `protobuf:"bytes,12,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"` // When the job should execute (RFC3339 format, empty if immediate)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_joblet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{1}
}

func (x *Job) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Job) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Job) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Job) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *Job) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *Job) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *Job) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *Job) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Job) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Job) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Job) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *Job) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_joblet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{2}
}

type RunJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU        int32                  `protobuf:"varint,3,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores      string                 `protobuf:"bytes,4,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory     int32                  `protobuf:"varint,5,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS      int32                  `protobuf:"varint,6,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Uploads       []*FileUpload          `protobuf:"bytes,7,rep,name=uploads,proto3" json:"uploads,omitempty"`
	Schedule      string                 `protobuf:"bytes,8,opt,name=schedule,proto3" json:"schedule,omitempty"` // RFC3339 formatted time string
	Network       string                 `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`   // Network name (none, isolated, bridge, or custom)
	Volumes       []string               `protobuf:"bytes,10,rep,name=volumes,proto3" json:"volumes,omitempty"`  // Volume names to mount
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobReq) Reset() {
	*x = RunJobReq{}
	mi := &file_joblet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobReq) ProtoMessage() {}

func (x *RunJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobReq.ProtoReflect.Descriptor instead.
func (*RunJobReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{3}
}

func (x *RunJobReq) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunJobReq) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunJobReq) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *RunJobReq) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *RunJobReq) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *RunJobReq) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *RunJobReq) GetUploads() []*FileUpload {
	if x != nil {
		return x.Uploads
	}
	return nil
}

func (x *RunJobReq) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *RunJobReq) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *RunJobReq) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type FileUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                // Relative path in job workspace
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`          // File content
	Mode          uint32                 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`               // Unix file permissions (e.g., 0644)
	IsDirectory   bool                   `protobuf:"varint,4,opt,name=isDirectory,proto3" json:"isDirectory,omitempty"` // True if this represents a directory
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUpload) Reset() {
	*x = FileUpload{}
	mi := &file_joblet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUpload) ProtoMessage() {}

func (x *FileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUpload.ProtoReflect.Descriptor instead.
func (*FileUpload) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{4}
}

func (x *FileUpload) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileUpload) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileUpload) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileUpload) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

type RunJobRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU        int32                  `protobuf:"varint,4,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores      string                 `protobuf:"bytes,5,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory     int32                  `protobuf:"varint,6,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS      int32                  `protobuf:"varint,7,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,11,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime string                 `protobuf:"bytes,12,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"` // When the job should execute (empty if immediate)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunJobRes) Reset() {
	*x = RunJobRes{}
	mi := &file_joblet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobRes) ProtoMessage() {}

func (x *RunJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunJobRes.ProtoReflect.Descriptor instead.
func (*RunJobRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{5}
}

func (x *RunJobRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunJobRes) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RunJobRes) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RunJobRes) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *RunJobRes) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *RunJobRes) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *RunJobRes) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *RunJobRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RunJobRes) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RunJobRes) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RunJobRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *RunJobRes) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

// GetJobStatus
type GetJobStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobStatusReq) Reset() {
	*x = GetJobStatusReq{}
	mi := &file_joblet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusReq) ProtoMessage() {}

func (x *GetJobStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusReq.ProtoReflect.Descriptor instead.
func (*GetJobStatusReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{6}
}

func (x *GetJobStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetJobStatusRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Args          []string               `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	MaxCPU        int32                  `protobuf:"varint,4,opt,name=maxCPU,proto3" json:"maxCPU,omitempty"`
	CpuCores      string                 `protobuf:"bytes,5,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	MaxMemory     int32                  `protobuf:"varint,6,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MaxIOBPS      int32                  `protobuf:"varint,7,opt,name=maxIOBPS,proto3" json:"maxIOBPS,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,10,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,11,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	ScheduledTime string                 `protobuf:"bytes,12,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"` // When the job should execute (empty if immediate)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobStatusRes) Reset() {
	*x = GetJobStatusRes{}
	mi := &file_joblet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStatusRes) ProtoMessage() {}

func (x *GetJobStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobStatusRes.ProtoReflect.Descriptor instead.
func (*GetJobStatusRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{7}
}

func (x *GetJobStatusRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobStatusRes) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *GetJobStatusRes) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *GetJobStatusRes) GetMaxCPU() int32 {
	if x != nil {
		return x.MaxCPU
	}
	return 0
}

func (x *GetJobStatusRes) GetCpuCores() string {
	if x != nil {
		return x.CpuCores
	}
	return ""
}

func (x *GetJobStatusRes) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *GetJobStatusRes) GetMaxIOBPS() int32 {
	if x != nil {
		return x.MaxIOBPS
	}
	return 0
}

func (x *GetJobStatusRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobStatusRes) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetJobStatusRes) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetJobStatusRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *GetJobStatusRes) GetScheduledTime() string {
	if x != nil {
		return x.ScheduledTime
	}
	return ""
}

// StopJob
type StopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopJobReq) Reset() {
	*x = StopJobReq{}
	mi := &file_joblet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobReq) ProtoMessage() {}

func (x *StopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobReq.ProtoReflect.Descriptor instead.
func (*StopJobReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{8}
}

func (x *StopJobReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopJobRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exitCode,proto3" json:"exitCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopJobRes) Reset() {
	*x = StopJobRes{}
	mi := &file_joblet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopJobRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobRes) ProtoMessage() {}

func (x *StopJobRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobRes.ProtoReflect.Descriptor instead.
func (*StopJobRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{9}
}

func (x *StopJobRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopJobRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StopJobRes) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *StopJobRes) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

// GetJobLogs
type GetJobLogsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogsReq) Reset() {
	*x = GetJobLogsReq{}
	mi := &file_joblet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogsReq) ProtoMessage() {}

func (x *GetJobLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogsReq.ProtoReflect.Descriptor instead.
func (*GetJobLogsReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{10}
}

func (x *GetJobLogsReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       []byte                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_joblet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{11}
}

func (x *DataChunk) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CreateNetworkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkReq) Reset() {
	*x = CreateNetworkReq{}
	mi := &file_joblet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkReq) ProtoMessage() {}

func (x *CreateNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkReq.ProtoReflect.Descriptor instead.
func (*CreateNetworkReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{12}
}

func (x *CreateNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkReq) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type CreateNetworkRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Bridge        string                 `protobuf:"bytes,3,opt,name=bridge,proto3" json:"bridge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNetworkRes) Reset() {
	*x = CreateNetworkRes{}
	mi := &file_joblet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNetworkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkRes) ProtoMessage() {}

func (x *CreateNetworkRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkRes.ProtoReflect.Descriptor instead.
func (*CreateNetworkRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{13}
}

func (x *CreateNetworkRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkRes) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *CreateNetworkRes) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

type RemoveNetworkReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkReq) Reset() {
	*x = RemoveNetworkReq{}
	mi := &file_joblet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkReq) ProtoMessage() {}

func (x *RemoveNetworkReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkReq.ProtoReflect.Descriptor instead.
func (*RemoveNetworkReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveNetworkReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveNetworkRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveNetworkRes) Reset() {
	*x = RemoveNetworkRes{}
	mi := &file_joblet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveNetworkRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNetworkRes) ProtoMessage() {}

func (x *RemoveNetworkRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNetworkRes.ProtoReflect.Descriptor instead.
func (*RemoveNetworkRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveNetworkRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveNetworkRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,2,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Bridge        string                 `protobuf:"bytes,3,opt,name=bridge,proto3" json:"bridge,omitempty"`
	JobCount      int32                  `protobuf:"varint,4,opt,name=jobCount,proto3" json:"jobCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_joblet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{16}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Network) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *Network) GetJobCount() int32 {
	if x != nil {
		return x.JobCount
	}
	return 0
}

type Networks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*Network             `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Networks) Reset() {
	*x = Networks{}
	mi := &file_joblet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Networks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Networks) ProtoMessage() {}

func (x *Networks) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Networks.ProtoReflect.Descriptor instead.
func (*Networks) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{17}
}

func (x *Networks) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type CreateVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"` // Size limit (e.g., "1GB", "500MB")
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // "filesystem" or "memory"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeReq) Reset() {
	*x = CreateVolumeReq{}
	mi := &file_joblet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeReq) ProtoMessage() {}

func (x *CreateVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeReq.ProtoReflect.Descriptor instead.
func (*CreateVolumeReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{18}
}

func (x *CreateVolumeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateVolumeReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateVolumeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"` // Host path where volume is stored
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolumeRes) Reset() {
	*x = CreateVolumeRes{}
	mi := &file_joblet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRes) ProtoMessage() {}

func (x *CreateVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRes.ProtoReflect.Descriptor instead.
func (*CreateVolumeRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{19}
}

func (x *CreateVolumeRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolumeRes) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateVolumeRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateVolumeRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RemoveVolumeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveVolumeReq) Reset() {
	*x = RemoveVolumeReq{}
	mi := &file_joblet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVolumeReq) ProtoMessage() {}

func (x *RemoveVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVolumeReq.ProtoReflect.Descriptor instead.
func (*RemoveVolumeReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveVolumeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveVolumeRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveVolumeRes) Reset() {
	*x = RemoveVolumeRes{}
	mi := &file_joblet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveVolumeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVolumeRes) ProtoMessage() {}

func (x *RemoveVolumeRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVolumeRes.ProtoReflect.Descriptor instead.
func (*RemoveVolumeRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveVolumeRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemoveVolumeRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Volume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          string                 `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	CreatedTime   string                 `protobuf:"bytes,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	JobCount      int32                  `protobuf:"varint,6,opt,name=jobCount,proto3" json:"jobCount,omitempty"` // Number of jobs currently using this volume
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volume) Reset() {
	*x = Volume{}
	mi := &file_joblet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{22}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Volume) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Volume) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Volume) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Volume) GetJobCount() int32 {
	if x != nil {
		return x.JobCount
	}
	return 0
}

type Volumes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volumes       []*Volume              `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Volumes) Reset() {
	*x = Volumes{}
	mi := &file_joblet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Volumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volumes) ProtoMessage() {}

func (x *Volumes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volumes.ProtoReflect.Descriptor instead.
func (*Volumes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{23}
}

func (x *Volumes) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type SystemStatusRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Available     bool                   `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Host          *HostInfo              `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Cpu           *CPUMetrics            `protobuf:"bytes,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryMetrics         `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*DiskMetrics         `protobuf:"bytes,6,rep,name=disks,proto3" json:"disks,omitempty"`
	Networks      []*NetworkMetrics      `protobuf:"bytes,7,rep,name=networks,proto3" json:"networks,omitempty"`
	Io            *IOMetrics             `protobuf:"bytes,8,opt,name=io,proto3" json:"io,omitempty"`
	Processes     *ProcessMetrics        `protobuf:"bytes,9,opt,name=processes,proto3" json:"processes,omitempty"`
	Cloud         *CloudInfo             `protobuf:"bytes,10,opt,name=cloud,proto3" json:"cloud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemStatusRes) Reset() {
	*x = SystemStatusRes{}
	mi := &file_joblet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusRes) ProtoMessage() {}

func (x *SystemStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusRes.ProtoReflect.Descriptor instead.
func (*SystemStatusRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{24}
}

func (x *SystemStatusRes) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SystemStatusRes) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *SystemStatusRes) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *SystemStatusRes) GetCpu() *CPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemStatusRes) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *SystemStatusRes) GetDisks() []*DiskMetrics {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemStatusRes) GetNetworks() []*NetworkMetrics {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *SystemStatusRes) GetIo() *IOMetrics {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *SystemStatusRes) GetProcesses() *ProcessMetrics {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *SystemStatusRes) GetCloud() *CloudInfo {
	if x != nil {
		return x.Cloud
	}
	return nil
}

type SystemMetricsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     string                 `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Host          *HostInfo              `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Cpu           *CPUMetrics            `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryMetrics         `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	Disks         []*DiskMetrics         `protobuf:"bytes,5,rep,name=disks,proto3" json:"disks,omitempty"`
	Networks      []*NetworkMetrics      `protobuf:"bytes,6,rep,name=networks,proto3" json:"networks,omitempty"`
	Io            *IOMetrics             `protobuf:"bytes,7,opt,name=io,proto3" json:"io,omitempty"`
	Processes     *ProcessMetrics        `protobuf:"bytes,8,opt,name=processes,proto3" json:"processes,omitempty"`
	Cloud         *CloudInfo             `protobuf:"bytes,9,opt,name=cloud,proto3" json:"cloud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMetricsRes) Reset() {
	*x = SystemMetricsRes{}
	mi := &file_joblet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMetricsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMetricsRes) ProtoMessage() {}

func (x *SystemMetricsRes) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMetricsRes.ProtoReflect.Descriptor instead.
func (*SystemMetricsRes) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{25}
}

func (x *SystemMetricsRes) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *SystemMetricsRes) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *SystemMetricsRes) GetCpu() *CPUMetrics {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *SystemMetricsRes) GetMemory() *MemoryMetrics {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *SystemMetricsRes) GetDisks() []*DiskMetrics {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *SystemMetricsRes) GetNetworks() []*NetworkMetrics {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *SystemMetricsRes) GetIo() *IOMetrics {
	if x != nil {
		return x.Io
	}
	return nil
}

func (x *SystemMetricsRes) GetProcesses() *ProcessMetrics {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *SystemMetricsRes) GetCloud() *CloudInfo {
	if x != nil {
		return x.Cloud
	}
	return nil
}

type StreamMetricsReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IntervalSeconds int32                  `protobuf:"varint,1,opt,name=intervalSeconds,proto3" json:"intervalSeconds,omitempty"` // How often to send updates (default: 5)
	MetricTypes     []string               `protobuf:"bytes,2,rep,name=metricTypes,proto3" json:"metricTypes,omitempty"`          // Optional: filter by types
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamMetricsReq) Reset() {
	*x = StreamMetricsReq{}
	mi := &file_joblet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMetricsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMetricsReq) ProtoMessage() {}

func (x *StreamMetricsReq) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMetricsReq.ProtoReflect.Descriptor instead.
func (*StreamMetricsReq) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{26}
}

func (x *StreamMetricsReq) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *StreamMetricsReq) GetMetricTypes() []string {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

type HostInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Hostname        string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os              string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Platform        string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily  string                 `protobuf:"bytes,4,opt,name=platformFamily,proto3" json:"platformFamily,omitempty"`
	PlatformVersion string                 `protobuf:"bytes,5,opt,name=platformVersion,proto3" json:"platformVersion,omitempty"`
	KernelVersion   string                 `protobuf:"bytes,6,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KernelArch      string                 `protobuf:"bytes,7,opt,name=kernelArch,proto3" json:"kernelArch,omitempty"`
	Architecture    string                 `protobuf:"bytes,8,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CpuCount        int32                  `protobuf:"varint,9,opt,name=cpuCount,proto3" json:"cpuCount,omitempty"`
	TotalMemory     int64                  `protobuf:"varint,10,opt,name=totalMemory,proto3" json:"totalMemory,omitempty"`
	BootTime        string                 `protobuf:"bytes,11,opt,name=bootTime,proto3" json:"bootTime,omitempty"`
	Uptime          int64                  `protobuf:"varint,12,opt,name=uptime,proto3" json:"uptime,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_joblet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{27}
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfo) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *HostInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *HostInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *HostInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

func (x *HostInfo) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *HostInfo) GetCpuCount() int32 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *HostInfo) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *HostInfo) GetBootTime() string {
	if x != nil {
		return x.BootTime
	}
	return ""
}

func (x *HostInfo) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

type CPUMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cores         int32                  `protobuf:"varint,1,opt,name=cores,proto3" json:"cores,omitempty"`
	UsagePercent  float64                `protobuf:"fixed64,2,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	UserTime      float64                `protobuf:"fixed64,3,opt,name=userTime,proto3" json:"userTime,omitempty"`
	SystemTime    float64                `protobuf:"fixed64,4,opt,name=systemTime,proto3" json:"systemTime,omitempty"`
	IdleTime      float64                `protobuf:"fixed64,5,opt,name=idleTime,proto3" json:"idleTime,omitempty"`
	IoWaitTime    float64                `protobuf:"fixed64,6,opt,name=ioWaitTime,proto3" json:"ioWaitTime,omitempty"`
	StealTime     float64                `protobuf:"fixed64,7,opt,name=stealTime,proto3" json:"stealTime,omitempty"`
	LoadAverage   []float64              `protobuf:"fixed64,8,rep,packed,name=loadAverage,proto3" json:"loadAverage,omitempty"` // 1, 5, 15 minute averages
	PerCoreUsage  []float64              `protobuf:"fixed64,9,rep,packed,name=perCoreUsage,proto3" json:"perCoreUsage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUMetrics) Reset() {
	*x = CPUMetrics{}
	mi := &file_joblet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUMetrics) ProtoMessage() {}

func (x *CPUMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUMetrics.ProtoReflect.Descriptor instead.
func (*CPUMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{28}
}

func (x *CPUMetrics) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPUMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *CPUMetrics) GetUserTime() float64 {
	if x != nil {
		return x.UserTime
	}
	return 0
}

func (x *CPUMetrics) GetSystemTime() float64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

func (x *CPUMetrics) GetIdleTime() float64 {
	if x != nil {
		return x.IdleTime
	}
	return 0
}

func (x *CPUMetrics) GetIoWaitTime() float64 {
	if x != nil {
		return x.IoWaitTime
	}
	return 0
}

func (x *CPUMetrics) GetStealTime() float64 {
	if x != nil {
		return x.StealTime
	}
	return 0
}

func (x *CPUMetrics) GetLoadAverage() []float64 {
	if x != nil {
		return x.LoadAverage
	}
	return nil
}

func (x *CPUMetrics) GetPerCoreUsage() []float64 {
	if x != nil {
		return x.PerCoreUsage
	}
	return nil
}

type MemoryMetrics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalBytes     int64                  `protobuf:"varint,1,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	UsedBytes      int64                  `protobuf:"varint,2,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`
	FreeBytes      int64                  `protobuf:"varint,3,opt,name=freeBytes,proto3" json:"freeBytes,omitempty"`
	AvailableBytes int64                  `protobuf:"varint,4,opt,name=availableBytes,proto3" json:"availableBytes,omitempty"`
	UsagePercent   float64                `protobuf:"fixed64,5,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	CachedBytes    int64                  `protobuf:"varint,6,opt,name=cachedBytes,proto3" json:"cachedBytes,omitempty"`
	BufferedBytes  int64                  `protobuf:"varint,7,opt,name=bufferedBytes,proto3" json:"bufferedBytes,omitempty"`
	SwapTotal      int64                  `protobuf:"varint,8,opt,name=swapTotal,proto3" json:"swapTotal,omitempty"`
	SwapUsed       int64                  `protobuf:"varint,9,opt,name=swapUsed,proto3" json:"swapUsed,omitempty"`
	SwapFree       int64                  `protobuf:"varint,10,opt,name=swapFree,proto3" json:"swapFree,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_joblet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{29}
}

func (x *MemoryMetrics) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsedBytes() int64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *MemoryMetrics) GetAvailableBytes() int64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

func (x *MemoryMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *MemoryMetrics) GetCachedBytes() int64 {
	if x != nil {
		return x.CachedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetBufferedBytes() int64 {
	if x != nil {
		return x.BufferedBytes
	}
	return 0
}

func (x *MemoryMetrics) GetSwapTotal() int64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *MemoryMetrics) GetSwapUsed() int64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *MemoryMetrics) GetSwapFree() int64 {
	if x != nil {
		return x.SwapFree
	}
	return 0
}

type DiskMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Device             string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	MountPoint         string                 `protobuf:"bytes,2,opt,name=mountPoint,proto3" json:"mountPoint,omitempty"`
	Filesystem         string                 `protobuf:"bytes,3,opt,name=filesystem,proto3" json:"filesystem,omitempty"`
	TotalBytes         int64                  `protobuf:"varint,4,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
	UsedBytes          int64                  `protobuf:"varint,5,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`
	FreeBytes          int64                  `protobuf:"varint,6,opt,name=freeBytes,proto3" json:"freeBytes,omitempty"`
	UsagePercent       float64                `protobuf:"fixed64,7,opt,name=usagePercent,proto3" json:"usagePercent,omitempty"`
	InodesTotal        int64                  `protobuf:"varint,8,opt,name=inodesTotal,proto3" json:"inodesTotal,omitempty"`
	InodesUsed         int64                  `protobuf:"varint,9,opt,name=inodesUsed,proto3" json:"inodesUsed,omitempty"`
	InodesFree         int64                  `protobuf:"varint,10,opt,name=inodesFree,proto3" json:"inodesFree,omitempty"`
	InodesUsagePercent float64                `protobuf:"fixed64,11,opt,name=inodesUsagePercent,proto3" json:"inodesUsagePercent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DiskMetrics) Reset() {
	*x = DiskMetrics{}
	mi := &file_joblet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskMetrics) ProtoMessage() {}

func (x *DiskMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskMetrics.ProtoReflect.Descriptor instead.
func (*DiskMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{30}
}

func (x *DiskMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskMetrics) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskMetrics) GetFilesystem() string {
	if x != nil {
		return x.Filesystem
	}
	return ""
}

func (x *DiskMetrics) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsedBytes() int64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *DiskMetrics) GetFreeBytes() int64 {
	if x != nil {
		return x.FreeBytes
	}
	return 0
}

func (x *DiskMetrics) GetUsagePercent() float64 {
	if x != nil {
		return x.UsagePercent
	}
	return 0
}

func (x *DiskMetrics) GetInodesTotal() int64 {
	if x != nil {
		return x.InodesTotal
	}
	return 0
}

func (x *DiskMetrics) GetInodesUsed() int64 {
	if x != nil {
		return x.InodesUsed
	}
	return 0
}

func (x *DiskMetrics) GetInodesFree() int64 {
	if x != nil {
		return x.InodesFree
	}
	return 0
}

func (x *DiskMetrics) GetInodesUsagePercent() float64 {
	if x != nil {
		return x.InodesUsagePercent
	}
	return 0
}

type NetworkMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Interface       string                 `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,2,opt,name=bytesReceived,proto3" json:"bytesReceived,omitempty"`
	BytesSent       int64                  `protobuf:"varint,3,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	PacketsReceived int64                  `protobuf:"varint,4,opt,name=packetsReceived,proto3" json:"packetsReceived,omitempty"`
	PacketsSent     int64                  `protobuf:"varint,5,opt,name=packetsSent,proto3" json:"packetsSent,omitempty"`
	ErrorsIn        int64                  `protobuf:"varint,6,opt,name=errorsIn,proto3" json:"errorsIn,omitempty"`
	ErrorsOut       int64                  `protobuf:"varint,7,opt,name=errorsOut,proto3" json:"errorsOut,omitempty"`
	DropsIn         int64                  `protobuf:"varint,8,opt,name=dropsIn,proto3" json:"dropsIn,omitempty"`
	DropsOut        int64                  `protobuf:"varint,9,opt,name=dropsOut,proto3" json:"dropsOut,omitempty"`
	ReceiveRate     float64                `protobuf:"fixed64,10,opt,name=receiveRate,proto3" json:"receiveRate,omitempty"`   // bytes per second
	TransmitRate    float64                `protobuf:"fixed64,11,opt,name=transmitRate,proto3" json:"transmitRate,omitempty"` // bytes per second
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkMetrics) Reset() {
	*x = NetworkMetrics{}
	mi := &file_joblet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMetrics) ProtoMessage() {}

func (x *NetworkMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMetrics.ProtoReflect.Descriptor instead.
func (*NetworkMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{31}
}

func (x *NetworkMetrics) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *NetworkMetrics) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkMetrics) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *NetworkMetrics) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsIn() int64 {
	if x != nil {
		return x.ErrorsIn
	}
	return 0
}

func (x *NetworkMetrics) GetErrorsOut() int64 {
	if x != nil {
		return x.ErrorsOut
	}
	return 0
}

func (x *NetworkMetrics) GetDropsIn() int64 {
	if x != nil {
		return x.DropsIn
	}
	return 0
}

func (x *NetworkMetrics) GetDropsOut() int64 {
	if x != nil {
		return x.DropsOut
	}
	return 0
}

func (x *NetworkMetrics) GetReceiveRate() float64 {
	if x != nil {
		return x.ReceiveRate
	}
	return 0
}

func (x *NetworkMetrics) GetTransmitRate() float64 {
	if x != nil {
		return x.TransmitRate
	}
	return 0
}

type IOMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalReads    int64                  `protobuf:"varint,1,opt,name=totalReads,proto3" json:"totalReads,omitempty"`
	TotalWrites   int64                  `protobuf:"varint,2,opt,name=totalWrites,proto3" json:"totalWrites,omitempty"`
	ReadBytes     int64                  `protobuf:"varint,3,opt,name=readBytes,proto3" json:"readBytes,omitempty"`
	WriteBytes    int64                  `protobuf:"varint,4,opt,name=writeBytes,proto3" json:"writeBytes,omitempty"`
	ReadRate      float64                `protobuf:"fixed64,5,opt,name=readRate,proto3" json:"readRate,omitempty"`   // bytes per second
	WriteRate     float64                `protobuf:"fixed64,6,opt,name=writeRate,proto3" json:"writeRate,omitempty"` // bytes per second
	DiskIO        []*DiskIOMetrics       `protobuf:"bytes,7,rep,name=diskIO,proto3" json:"diskIO,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOMetrics) Reset() {
	*x = IOMetrics{}
	mi := &file_joblet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOMetrics) ProtoMessage() {}

func (x *IOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOMetrics.ProtoReflect.Descriptor instead.
func (*IOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{32}
}

func (x *IOMetrics) GetTotalReads() int64 {
	if x != nil {
		return x.TotalReads
	}
	return 0
}

func (x *IOMetrics) GetTotalWrites() int64 {
	if x != nil {
		return x.TotalWrites
	}
	return 0
}

func (x *IOMetrics) GetReadBytes() int64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *IOMetrics) GetWriteBytes() int64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *IOMetrics) GetReadRate() float64 {
	if x != nil {
		return x.ReadRate
	}
	return 0
}

func (x *IOMetrics) GetWriteRate() float64 {
	if x != nil {
		return x.WriteRate
	}
	return 0
}

func (x *IOMetrics) GetDiskIO() []*DiskIOMetrics {
	if x != nil {
		return x.DiskIO
	}
	return nil
}

type DiskIOMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Device          string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	ReadsCompleted  int64                  `protobuf:"varint,2,opt,name=readsCompleted,proto3" json:"readsCompleted,omitempty"`
	WritesCompleted int64                  `protobuf:"varint,3,opt,name=writesCompleted,proto3" json:"writesCompleted,omitempty"`
	ReadBytes       int64                  `protobuf:"varint,4,opt,name=readBytes,proto3" json:"readBytes,omitempty"`
	WriteBytes      int64                  `protobuf:"varint,5,opt,name=writeBytes,proto3" json:"writeBytes,omitempty"`
	ReadTime        int64                  `protobuf:"varint,6,opt,name=readTime,proto3" json:"readTime,omitempty"`        // milliseconds
	WriteTime       int64                  `protobuf:"varint,7,opt,name=writeTime,proto3" json:"writeTime,omitempty"`      // milliseconds
	IoTime          int64                  `protobuf:"varint,8,opt,name=ioTime,proto3" json:"ioTime,omitempty"`            // milliseconds
	Utilization     float64                `protobuf:"fixed64,9,opt,name=utilization,proto3" json:"utilization,omitempty"` // percentage
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DiskIOMetrics) Reset() {
	*x = DiskIOMetrics{}
	mi := &file_joblet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskIOMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskIOMetrics) ProtoMessage() {}

func (x *DiskIOMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskIOMetrics.ProtoReflect.Descriptor instead.
func (*DiskIOMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{33}
}

func (x *DiskIOMetrics) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DiskIOMetrics) GetReadsCompleted() int64 {
	if x != nil {
		return x.ReadsCompleted
	}
	return 0
}

func (x *DiskIOMetrics) GetWritesCompleted() int64 {
	if x != nil {
		return x.WritesCompleted
	}
	return 0
}

func (x *DiskIOMetrics) GetReadBytes() int64 {
	if x != nil {
		return x.ReadBytes
	}
	return 0
}

func (x *DiskIOMetrics) GetWriteBytes() int64 {
	if x != nil {
		return x.WriteBytes
	}
	return 0
}

func (x *DiskIOMetrics) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *DiskIOMetrics) GetWriteTime() int64 {
	if x != nil {
		return x.WriteTime
	}
	return 0
}

func (x *DiskIOMetrics) GetIoTime() int64 {
	if x != nil {
		return x.IoTime
	}
	return 0
}

func (x *DiskIOMetrics) GetUtilization() float64 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

type ProcessMetrics struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TotalProcesses    int32                  `protobuf:"varint,1,opt,name=totalProcesses,proto3" json:"totalProcesses,omitempty"`
	RunningProcesses  int32                  `protobuf:"varint,2,opt,name=runningProcesses,proto3" json:"runningProcesses,omitempty"`
	SleepingProcesses int32                  `protobuf:"varint,3,opt,name=sleepingProcesses,proto3" json:"sleepingProcesses,omitempty"`
	StoppedProcesses  int32                  `protobuf:"varint,4,opt,name=stoppedProcesses,proto3" json:"stoppedProcesses,omitempty"`
	ZombieProcesses   int32                  `protobuf:"varint,5,opt,name=zombieProcesses,proto3" json:"zombieProcesses,omitempty"`
	TotalThreads      int32                  `protobuf:"varint,6,opt,name=totalThreads,proto3" json:"totalThreads,omitempty"`
	TopByCPU          []*ProcessInfo         `protobuf:"bytes,7,rep,name=topByCPU,proto3" json:"topByCPU,omitempty"`
	TopByMemory       []*ProcessInfo         `protobuf:"bytes,8,rep,name=topByMemory,proto3" json:"topByMemory,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProcessMetrics) Reset() {
	*x = ProcessMetrics{}
	mi := &file_joblet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessMetrics) ProtoMessage() {}

func (x *ProcessMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessMetrics.ProtoReflect.Descriptor instead.
func (*ProcessMetrics) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{34}
}

func (x *ProcessMetrics) GetTotalProcesses() int32 {
	if x != nil {
		return x.TotalProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetRunningProcesses() int32 {
	if x != nil {
		return x.RunningProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetSleepingProcesses() int32 {
	if x != nil {
		return x.SleepingProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetStoppedProcesses() int32 {
	if x != nil {
		return x.StoppedProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetZombieProcesses() int32 {
	if x != nil {
		return x.ZombieProcesses
	}
	return 0
}

func (x *ProcessMetrics) GetTotalThreads() int32 {
	if x != nil {
		return x.TotalThreads
	}
	return 0
}

func (x *ProcessMetrics) GetTopByCPU() []*ProcessInfo {
	if x != nil {
		return x.TopByCPU
	}
	return nil
}

func (x *ProcessMetrics) GetTopByMemory() []*ProcessInfo {
	if x != nil {
		return x.TopByMemory
	}
	return nil
}

type ProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          int32                  `protobuf:"varint,2,opt,name=ppid,proto3" json:"ppid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Command       string                 `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	CpuPercent    float64                `protobuf:"fixed64,5,opt,name=cpuPercent,proto3" json:"cpuPercent,omitempty"`
	MemoryPercent float64                `protobuf:"fixed64,6,opt,name=memoryPercent,proto3" json:"memoryPercent,omitempty"`
	MemoryBytes   int64                  `protobuf:"varint,7,opt,name=memoryBytes,proto3" json:"memoryBytes,omitempty"`
	Status        string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	StartTime     string                 `protobuf:"bytes,9,opt,name=startTime,proto3" json:"startTime,omitempty"`
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_joblet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{35}
}

func (x *ProcessInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetPpid() int32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessInfo) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ProcessInfo) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryPercent() float64 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *ProcessInfo) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

func (x *ProcessInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ProcessInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type CloudInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Provider       string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region         string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Zone           string                 `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	InstanceID     string                 `protobuf:"bytes,4,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	InstanceType   string                 `protobuf:"bytes,5,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	HypervisorType string                 `protobuf:"bytes,6,opt,name=hypervisorType,proto3" json:"hypervisorType,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CloudInfo) Reset() {
	*x = CloudInfo{}
	mi := &file_joblet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudInfo) ProtoMessage() {}

func (x *CloudInfo) ProtoReflect() protoreflect.Message {
	mi := &file_joblet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudInfo.ProtoReflect.Descriptor instead.
func (*CloudInfo) Descriptor() ([]byte, []int) {
	return file_joblet_proto_rawDescGZIP(), []int{36}
}

func (x *CloudInfo) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CloudInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CloudInfo) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *CloudInfo) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

func (x *CloudInfo) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *CloudInfo) GetHypervisorType() string {
	if x != nil {
		return x.HypervisorType
	}
	return ""
}

func (x *CloudInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_joblet_proto protoreflect.FileDescriptor

const file_joblet_proto_rawDesc = "" +
	"\n" +
	"\fjoblet.proto\x12\x06joblet\"'\n" +
	"\x04Jobs\x12\x1f\n" +
	"\x04jobs\x18\x01 \x03(\v2\v.joblet.JobR\x04jobs\"\xc3\x02\n" +
	"\x03Job\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x04 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x05 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\x06 \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\a \x01(\x05R\bmaxIOBPS\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\n" +
	" \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\v \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\f \x01(\tR\rscheduledTime\"\x0e\n" +
	"\fEmptyRequest\"\xa5\x02\n" +
	"\tRunJobReq\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x03 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x04 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\x05 \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\x06 \x01(\x05R\bmaxIOBPS\x12,\n" +
	"\auploads\x18\a \x03(\v2\x12.joblet.FileUploadR\auploads\x12\x1a\n" +
	"\bschedule\x18\b \x01(\tR\bschedule\x12\x18\n" +
	"\anetwork\x18\t \x01(\tR\anetwork\x12\x18\n" +
	"\avolumes\x18\n" +
	" \x03(\tR\avolumes\"p\n" +
	"\n" +
	"FileUpload\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\rR\x04mode\x12 \n" +
	"\visDirectory\x18\x04 \x01(\bR\visDirectory\"\xc9\x02\n" +
	"\tRunJobRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x04 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x05 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\x06 \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\a \x01(\x05R\bmaxIOBPS\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\n" +
	" \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\v \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\f \x01(\tR\rscheduledTime\"!\n" +
	"\x0fGetJobStatusReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xcf\x02\n" +
	"\x0fGetJobStatusRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x12\n" +
	"\x04args\x18\x03 \x03(\tR\x04args\x12\x16\n" +
	"\x06maxCPU\x18\x04 \x01(\x05R\x06maxCPU\x12\x1a\n" +
	"\bcpuCores\x18\x05 \x01(\tR\bcpuCores\x12\x1c\n" +
	"\tmaxMemory\x18\x06 \x01(\x05R\tmaxMemory\x12\x1a\n" +
	"\bmaxIOBPS\x18\a \x01(\x05R\bmaxIOBPS\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\n" +
	" \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\v \x01(\x05R\bexitCode\x12$\n" +
	"\rscheduledTime\x18\f \x01(\tR\rscheduledTime\"\x1c\n" +
	"\n" +
	"StopJobReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"j\n" +
	"\n" +
	"StopJobRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\aendTime\x18\x03 \x01(\tR\aendTime\x12\x1a\n" +
	"\bexitCode\x18\x04 \x01(\x05R\bexitCode\"\x1f\n" +
	"\rGetJobLogsReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"%\n" +
	"\tDataChunk\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\":\n" +
	"\x10CreateNetworkReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\"R\n" +
	"\x10CreateNetworkRes\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12\x16\n" +
	"\x06bridge\x18\x03 \x01(\tR\x06bridge\"&\n" +
	"\x10RemoveNetworkReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"F\n" +
	"\x10RemoveNetworkRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"e\n" +
	"\aNetwork\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x02 \x01(\tR\x04cidr\x12\x16\n" +
	"\x06bridge\x18\x03 \x01(\tR\x06bridge\x12\x1a\n" +
	"\bjobCount\x18\x04 \x01(\x05R\bjobCount\"7\n" +
	"\bNetworks\x12+\n" +
	"\bnetworks\x18\x01 \x03(\v2\x0f.joblet.NetworkR\bnetworks\"M\n" +
	"\x0fCreateVolumeReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"a\n" +
	"\x0fCreateVolumeRes\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\"%\n" +
	"\x0fRemoveVolumeReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"E\n" +
	"\x0fRemoveVolumeRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x96\x01\n" +
	"\x06Volume\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12 \n" +
	"\vcreatedTime\x18\x05 \x01(\tR\vcreatedTime\x12\x1a\n" +
	"\bjobCount\x18\x06 \x01(\x05R\bjobCount\"3\n" +
	"\aVolumes\x12(\n" +
	"\avolumes\x18\x01 \x03(\v2\x0e.joblet.VolumeR\avolumes\"\xa9\x03\n" +
	"\x0fSystemStatusRes\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\bR\tavailable\x12$\n" +
	"\x04host\x18\x03 \x01(\v2\x10.joblet.HostInfoR\x04host\x12$\n" +
	"\x03cpu\x18\x04 \x01(\v2\x12.joblet.CPUMetricsR\x03cpu\x12-\n" +
	"\x06memory\x18\x05 \x01(\v2\x15.joblet.MemoryMetricsR\x06memory\x12)\n" +
	"\x05disks\x18\x06 \x03(\v2\x13.joblet.DiskMetricsR\x05disks\x122\n" +
	"\bnetworks\x18\a \x03(\v2\x16.joblet.NetworkMetricsR\bnetworks\x12!\n" +
	"\x02io\x18\b \x01(\v2\x11.joblet.IOMetricsR\x02io\x124\n" +
	"\tprocesses\x18\t \x01(\v2\x16.joblet.ProcessMetricsR\tprocesses\x12'\n" +
	"\x05cloud\x18\n" +
	" \x01(\v2\x11.joblet.CloudInfoR\x05cloud\"\x8c\x03\n" +
	"\x10SystemMetricsRes\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\tR\ttimestamp\x12$\n" +
	"\x04host\x18\x02 \x01(\v2\x10.joblet.HostInfoR\x04host\x12$\n" +
	"\x03cpu\x18\x03 \x01(\v2\x12.joblet.CPUMetricsR\x03cpu\x12-\n" +
	"\x06memory\x18\x04 \x01(\v2\x15.joblet.MemoryMetricsR\x06memory\x12)\n" +
	"\x05disks\x18\x05 \x03(\v2\x13.joblet.DiskMetricsR\x05disks\x122\n" +
	"\bnetworks\x18\x06 \x03(\v2\x16.joblet.NetworkMetricsR\bnetworks\x12!\n" +
	"\x02io\x18\a \x01(\v2\x11.joblet.IOMetricsR\x02io\x124\n" +
	"\tprocesses\x18\b \x01(\v2\x16.joblet.ProcessMetricsR\tprocesses\x12'\n" +
	"\x05cloud\x18\t \x01(\v2\x11.joblet.CloudInfoR\x05cloud\"^\n" +
	"\x10StreamMetricsReq\x12(\n" +
	"\x0fintervalSeconds\x18\x01 \x01(\x05R\x0fintervalSeconds\x12 \n" +
	"\vmetricTypes\x18\x02 \x03(\tR\vmetricTypes\"\x80\x03\n" +
	"\bHostInfo\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12&\n" +
	"\x0eplatformFamily\x18\x04 \x01(\tR\x0eplatformFamily\x12(\n" +
	"\x0fplatformVersion\x18\x05 \x01(\tR\x0fplatformVersion\x12$\n" +
	"\rkernelVersion\x18\x06 \x01(\tR\rkernelVersion\x12\x1e\n" +
	"\n" +
	"kernelArch\x18\a \x01(\tR\n" +
	"kernelArch\x12\"\n" +
	"\farchitecture\x18\b \x01(\tR\farchitecture\x12\x1a\n" +
	"\bcpuCount\x18\t \x01(\x05R\bcpuCount\x12 \n" +
	"\vtotalMemory\x18\n" +
	" \x01(\x03R\vtotalMemory\x12\x1a\n" +
	"\bbootTime\x18\v \x01(\tR\bbootTime\x12\x16\n" +
	"\x06uptime\x18\f \x01(\x03R\x06uptime\"\xa2\x02\n" +
	"\n" +
	"CPUMetrics\x12\x14\n" +
	"\x05cores\x18\x01 \x01(\x05R\x05cores\x12\"\n" +
	"\fusagePercent\x18\x02 \x01(\x01R\fusagePercent\x12\x1a\n" +
	"\buserTime\x18\x03 \x01(\x01R\buserTime\x12\x1e\n" +
	"\n" +
	"systemTime\x18\x04 \x01(\x01R\n" +
	"systemTime\x12\x1a\n" +
	"\bidleTime\x18\x05 \x01(\x01R\bidleTime\x12\x1e\n" +
	"\n" +
	"ioWaitTime\x18\x06 \x01(\x01R\n" +
	"ioWaitTime\x12\x1c\n" +
	"\tstealTime\x18\a \x01(\x01R\tstealTime\x12 \n" +
	"\vloadAverage\x18\b \x03(\x01R\vloadAverage\x12\"\n" +
	"\fperCoreUsage\x18\t \x03(\x01R\fperCoreUsage\"\xd5\x02\n" +
	"\rMemoryMetrics\x12\x1e\n" +
	"\n" +
	"totalBytes\x18\x01 \x01(\x03R\n" +
	"totalBytes\x12\x1c\n" +
	"\tusedBytes\x18\x02 \x01(\x03R\tusedBytes\x12\x1c\n" +
	"\tfreeBytes\x18\x03 \x01(\x03R\tfreeBytes\x12&\n" +
	"\x0eavailableBytes\x18\x04 \x01(\x03R\x0eavailableBytes\x12\"\n" +
	"\fusagePercent\x18\x05 \x01(\x01R\fusagePercent\x12 \n" +
	"\vcachedBytes\x18\x06 \x01(\x03R\vcachedBytes\x12$\n" +
	"\rbufferedBytes\x18\a \x01(\x03R\rbufferedBytes\x12\x1c\n" +
	"\tswapTotal\x18\b \x01(\x03R\tswapTotal\x12\x1a\n" +
	"\bswapUsed\x18\t \x01(\x03R\bswapUsed\x12\x1a\n" +
	"\bswapFree\x18\n" +
	" \x01(\x03R\bswapFree\"\xf7\x02\n" +
	"\vDiskMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x1e\n" +
	"\n" +
	"mountPoint\x18\x02 \x01(\tR\n" +
	"mountPoint\x12\x1e\n" +
	"\n" +
	"filesystem\x18\x03 \x01(\tR\n" +
	"filesystem\x12\x1e\n" +
	"\n" +
	"totalBytes\x18\x04 \x01(\x03R\n" +
	"totalBytes\x12\x1c\n" +
	"\tusedBytes\x18\x05 \x01(\x03R\tusedBytes\x12\x1c\n" +
	"\tfreeBytes\x18\x06 \x01(\x03R\tfreeBytes\x12\"\n" +
	"\fusagePercent\x18\a \x01(\x01R\fusagePercent\x12 \n" +
	"\vinodesTotal\x18\b \x01(\x03R\vinodesTotal\x12\x1e\n" +
	"\n" +
	"inodesUsed\x18\t \x01(\x03R\n" +
	"inodesUsed\x12\x1e\n" +
	"\n" +
	"inodesFree\x18\n" +
	" \x01(\x03R\n" +
	"inodesFree\x12.\n" +
	"\x12inodesUsagePercent\x18\v \x01(\x01R\x12inodesUsagePercent\"\xf4\x02\n" +
	"\x0eNetworkMetrics\x12\x1c\n" +
	"\tinterface\x18\x01 \x01(\tR\tinterface\x12$\n" +
	"\rbytesReceived\x18\x02 \x01(\x03R\rbytesReceived\x12\x1c\n" +
	"\tbytesSent\x18\x03 \x01(\x03R\tbytesSent\x12(\n" +
	"\x0fpacketsReceived\x18\x04 \x01(\x03R\x0fpacketsReceived\x12 \n" +
	"\vpacketsSent\x18\x05 \x01(\x03R\vpacketsSent\x12\x1a\n" +
	"\berrorsIn\x18\x06 \x01(\x03R\berrorsIn\x12\x1c\n" +
	"\terrorsOut\x18\a \x01(\x03R\terrorsOut\x12\x18\n" +
	"\adropsIn\x18\b \x01(\x03R\adropsIn\x12\x1a\n" +
	"\bdropsOut\x18\t \x01(\x03R\bdropsOut\x12 \n" +
	"\vreceiveRate\x18\n" +
	" \x01(\x01R\vreceiveRate\x12\"\n" +
	"\ftransmitRate\x18\v \x01(\x01R\ftransmitRate\"\xf4\x01\n" +
	"\tIOMetrics\x12\x1e\n" +
	"\n" +
	"totalReads\x18\x01 \x01(\x03R\n" +
	"totalReads\x12 \n" +
	"\vtotalWrites\x18\x02 \x01(\x03R\vtotalWrites\x12\x1c\n" +
	"\treadBytes\x18\x03 \x01(\x03R\treadBytes\x12\x1e\n" +
	"\n" +
	"writeBytes\x18\x04 \x01(\x03R\n" +
	"writeBytes\x12\x1a\n" +
	"\breadRate\x18\x05 \x01(\x01R\breadRate\x12\x1c\n" +
	"\twriteRate\x18\x06 \x01(\x01R\twriteRate\x12-\n" +
	"\x06diskIO\x18\a \x03(\v2\x15.joblet.DiskIOMetricsR\x06diskIO\"\xab\x02\n" +
	"\rDiskIOMetrics\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12&\n" +
	"\x0ereadsCompleted\x18\x02 \x01(\x03R\x0ereadsCompleted\x12(\n" +
	"\x0fwritesCompleted\x18\x03 \x01(\x03R\x0fwritesCompleted\x12\x1c\n" +
	"\treadBytes\x18\x04 \x01(\x03R\treadBytes\x12\x1e\n" +
	"\n" +
	"writeBytes\x18\x05 \x01(\x03R\n" +
	"writeBytes\x12\x1a\n" +
	"\breadTime\x18\x06 \x01(\x03R\breadTime\x12\x1c\n" +
	"\twriteTime\x18\a \x01(\x03R\twriteTime\x12\x16\n" +
	"\x06ioTime\x18\b \x01(\x03R\x06ioTime\x12 \n" +
	"\vutilization\x18\t \x01(\x01R\vutilization\"\xf4\x02\n" +
	"\x0eProcessMetrics\x12&\n" +
	"\x0etotalProcesses\x18\x01 \x01(\x05R\x0etotalProcesses\x12*\n" +
	"\x10runningProcesses\x18\x02 \x01(\x05R\x10runningProcesses\x12,\n" +
	"\x11sleepingProcesses\x18\x03 \x01(\x05R\x11sleepingProcesses\x12*\n" +
	"\x10stoppedProcesses\x18\x04 \x01(\x05R\x10stoppedProcesses\x12(\n" +
	"\x0fzombieProcesses\x18\x05 \x01(\x05R\x0fzombieProcesses\x12\"\n" +
	"\ftotalThreads\x18\x06 \x01(\x05R\ftotalThreads\x12/\n" +
	"\btopByCPU\x18\a \x03(\v2\x13.joblet.ProcessInfoR\btopByCPU\x125\n" +
	"\vtopByMemory\x18\b \x03(\v2\x13.joblet.ProcessInfoR\vtopByMemory\"\x93\x02\n" +
	"\vProcessInfo\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x12\n" +
	"\x04ppid\x18\x02 \x01(\x05R\x04ppid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\acommand\x18\x04 \x01(\tR\acommand\x12\x1e\n" +
	"\n" +
	"cpuPercent\x18\x05 \x01(\x01R\n" +
	"cpuPercent\x12$\n" +
	"\rmemoryPercent\x18\x06 \x01(\x01R\rmemoryPercent\x12 \n" +
	"\vmemoryBytes\x18\a \x01(\x03R\vmemoryBytes\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\x1c\n" +
	"\tstartTime\x18\t \x01(\tR\tstartTime\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\"\xb9\x02\n" +
	"\tCloudInfo\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x12\n" +
	"\x04zone\x18\x03 \x01(\tR\x04zone\x12\x1e\n" +
	"\n" +
	"instanceID\x18\x04 \x01(\tR\n" +
	"instanceID\x12\"\n" +
	"\finstanceType\x18\x05 \x01(\tR\finstanceType\x12&\n" +
	"\x0ehypervisorType\x18\x06 \x01(\tR\x0ehypervisorType\x12;\n" +
	"\bmetadata\x18\a \x03(\v2\x1f.joblet.CloudInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa6\x02\n" +
	"\rJobletService\x120\n" +
	"\x06RunJob\x12\x11.joblet.RunJobReq\x1a\x11.joblet.RunJobRes\"\x00\x12B\n" +
	"\fGetJobStatus\x12\x17.joblet.GetJobStatusReq\x1a\x17.joblet.GetJobStatusRes\"\x00\x123\n" +
	"\aStopJob\x12\x12.joblet.StopJobReq\x1a\x12.joblet.StopJobRes\"\x00\x128\n" +
	"\n" +
	"GetJobLogs\x12\x15.joblet.GetJobLogsReq\x1a\x11.joblet.DataChunk0\x01\x120\n" +
	"\bListJobs\x12\x14.joblet.EmptyRequest\x1a\f.joblet.Jobs\"\x002\xd8\x01\n" +
	"\x0eNetworkService\x12E\n" +
	"\rCreateNetwork\x12\x18.joblet.CreateNetworkReq\x1a\x18.joblet.CreateNetworkRes\"\x00\x128\n" +
	"\fListNetworks\x12\x14.joblet.EmptyRequest\x1a\x10.joblet.Networks\"\x00\x12E\n" +
	"\rRemoveNetwork\x12\x18.joblet.RemoveNetworkReq\x1a\x18.joblet.RemoveNetworkRes\"\x002\xcf\x01\n" +
	"\rVolumeService\x12B\n" +
	"\fCreateVolume\x12\x17.joblet.CreateVolumeReq\x1a\x17.joblet.CreateVolumeRes\"\x00\x126\n" +
	"\vListVolumes\x12\x14.joblet.EmptyRequest\x1a\x0f.joblet.Volumes\"\x00\x12B\n" +
	"\fRemoveVolume\x12\x17.joblet.RemoveVolumeReq\x1a\x17.joblet.RemoveVolumeRes\"\x002\xa6\x01\n" +
	"\x11MonitoringService\x12B\n" +
	"\x0fGetSystemStatus\x12\x14.joblet.EmptyRequest\x1a\x17.joblet.SystemStatusRes\"\x00\x12M\n" +
	"\x13StreamSystemMetrics\x12\x18.joblet.StreamMetricsReq\x1a\x18.joblet.SystemMetricsRes\"\x000\x01B\x04Z\x02./b\x06proto3"

var (
	file_joblet_proto_rawDescOnce sync.Once
	file_joblet_proto_rawDescData []byte
)

func file_joblet_proto_rawDescGZIP() []byte {
	file_joblet_proto_rawDescOnce.Do(func() {
		file_joblet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_joblet_proto_rawDesc), len(file_joblet_proto_rawDesc)))
	})
	return file_joblet_proto_rawDescData
}

var file_joblet_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_joblet_proto_goTypes = []any{
	(*Jobs)(nil),             // 0: joblet.Jobs
	(*Job)(nil),              // 1: joblet.Job
	(*EmptyRequest)(nil),     // 2: joblet.EmptyRequest
	(*RunJobReq)(nil),        // 3: joblet.RunJobReq
	(*FileUpload)(nil),       // 4: joblet.FileUpload
	(*RunJobRes)(nil),        // 5: joblet.RunJobRes
	(*GetJobStatusReq)(nil),  // 6: joblet.GetJobStatusReq
	(*GetJobStatusRes)(nil),  // 7: joblet.GetJobStatusRes
	(*StopJobReq)(nil),       // 8: joblet.StopJobReq
	(*StopJobRes)(nil),       // 9: joblet.StopJobRes
	(*GetJobLogsReq)(nil),    // 10: joblet.GetJobLogsReq
	(*DataChunk)(nil),        // 11: joblet.DataChunk
	(*CreateNetworkReq)(nil), // 12: joblet.CreateNetworkReq
	(*CreateNetworkRes)(nil), // 13: joblet.CreateNetworkRes
	(*RemoveNetworkReq)(nil), // 14: joblet.RemoveNetworkReq
	(*RemoveNetworkRes)(nil), // 15: joblet.RemoveNetworkRes
	(*Network)(nil),          // 16: joblet.Network
	(*Networks)(nil),         // 17: joblet.Networks
	(*CreateVolumeReq)(nil),  // 18: joblet.CreateVolumeReq
	(*CreateVolumeRes)(nil),  // 19: joblet.CreateVolumeRes
	(*RemoveVolumeReq)(nil),  // 20: joblet.RemoveVolumeReq
	(*RemoveVolumeRes)(nil),  // 21: joblet.RemoveVolumeRes
	(*Volume)(nil),           // 22: joblet.Volume
	(*Volumes)(nil),          // 23: joblet.Volumes
	(*SystemStatusRes)(nil),  // 24: joblet.SystemStatusRes
	(*SystemMetricsRes)(nil), // 25: joblet.SystemMetricsRes
	(*StreamMetricsReq)(nil), // 26: joblet.StreamMetricsReq
	(*HostInfo)(nil),         // 27: joblet.HostInfo
	(*CPUMetrics)(nil),       // 28: joblet.CPUMetrics
	(*MemoryMetrics)(nil),    // 29: joblet.MemoryMetrics
	(*DiskMetrics)(nil),      // 30: joblet.DiskMetrics
	(*NetworkMetrics)(nil),   // 31: joblet.NetworkMetrics
	(*IOMetrics)(nil),        // 32: joblet.IOMetrics
	(*DiskIOMetrics)(nil),    // 33: joblet.DiskIOMetrics
	(*ProcessMetrics)(nil),   // 34: joblet.ProcessMetrics
	(*ProcessInfo)(nil),      // 35: joblet.ProcessInfo
	(*CloudInfo)(nil),        // 36: joblet.CloudInfo
	nil,                      // 37: joblet.CloudInfo.MetadataEntry
}
var file_joblet_proto_depIdxs = []int32{
	1,  // 0: joblet.Jobs.jobs:type_name -> joblet.Job
	4,  // 1: joblet.RunJobReq.uploads:type_name -> joblet.FileUpload
	16, // 2: joblet.Networks.networks:type_name -> joblet.Network
	22, // 3: joblet.Volumes.volumes:type_name -> joblet.Volume
	27, // 4: joblet.SystemStatusRes.host:type_name -> joblet.HostInfo
	28, // 5: joblet.SystemStatusRes.cpu:type_name -> joblet.CPUMetrics
	29, // 6: joblet.SystemStatusRes.memory:type_name -> joblet.MemoryMetrics
	30, // 7: joblet.SystemStatusRes.disks:type_name -> joblet.DiskMetrics
	31, // 8: joblet.SystemStatusRes.networks:type_name -> joblet.NetworkMetrics
	32, // 9: joblet.SystemStatusRes.io:type_name -> joblet.IOMetrics
	34, // 10: joblet.SystemStatusRes.processes:type_name -> joblet.ProcessMetrics
	36, // 11: joblet.SystemStatusRes.cloud:type_name -> joblet.CloudInfo
	27, // 12: joblet.SystemMetricsRes.host:type_name -> joblet.HostInfo
	28, // 13: joblet.SystemMetricsRes.cpu:type_name -> joblet.CPUMetrics
	29, // 14: joblet.SystemMetricsRes.memory:type_name -> joblet.MemoryMetrics
	30, // 15: joblet.SystemMetricsRes.disks:type_name -> joblet.DiskMetrics
	31, // 16: joblet.SystemMetricsRes.networks:type_name -> joblet.NetworkMetrics
	32, // 17: joblet.SystemMetricsRes.io:type_name -> joblet.IOMetrics
	34, // 18: joblet.SystemMetricsRes.processes:type_name -> joblet.ProcessMetrics
	36, // 19: joblet.SystemMetricsRes.cloud:type_name -> joblet.CloudInfo
	33, // 20: joblet.IOMetrics.diskIO:type_name -> joblet.DiskIOMetrics
	35, // 21: joblet.ProcessMetrics.topByCPU:type_name -> joblet.ProcessInfo
	35, // 22: joblet.ProcessMetrics.topByMemory:type_name -> joblet.ProcessInfo
	37, // 23: joblet.CloudInfo.metadata:type_name -> joblet.CloudInfo.MetadataEntry
	3,  // 24: joblet.JobletService.RunJob:input_type -> joblet.RunJobReq
	6,  // 25: joblet.JobletService.GetJobStatus:input_type -> joblet.GetJobStatusReq
	8,  // 26: joblet.JobletService.StopJob:input_type -> joblet.StopJobReq
	10, // 27: joblet.JobletService.GetJobLogs:input_type -> joblet.GetJobLogsReq
	2,  // 28: joblet.JobletService.ListJobs:input_type -> joblet.EmptyRequest
	12, // 29: joblet.NetworkService.CreateNetwork:input_type -> joblet.CreateNetworkReq
	2,  // 30: joblet.NetworkService.ListNetworks:input_type -> joblet.EmptyRequest
	14, // 31: joblet.NetworkService.RemoveNetwork:input_type -> joblet.RemoveNetworkReq
	18, // 32: joblet.VolumeService.CreateVolume:input_type -> joblet.CreateVolumeReq
	2,  // 33: joblet.VolumeService.ListVolumes:input_type -> joblet.EmptyRequest
	20, // 34: joblet.VolumeService.RemoveVolume:input_type -> joblet.RemoveVolumeReq
	2,  // 35: joblet.MonitoringService.GetSystemStatus:input_type -> joblet.EmptyRequest
	26, // 36: joblet.MonitoringService.StreamSystemMetrics:input_type -> joblet.StreamMetricsReq
	5,  // 37: joblet.JobletService.RunJob:output_type -> joblet.RunJobRes
	7,  // 38: joblet.JobletService.GetJobStatus:output_type -> joblet.GetJobStatusRes
	9,  // 39: joblet.JobletService.StopJob:output_type -> joblet.StopJobRes
	11, // 40: joblet.JobletService.GetJobLogs:output_type -> joblet.DataChunk
	0,  // 41: joblet.JobletService.ListJobs:output_type -> joblet.Jobs
	13, // 42: joblet.NetworkService.CreateNetwork:output_type -> joblet.CreateNetworkRes
	17, // 43: joblet.NetworkService.ListNetworks:output_type -> joblet.Networks
	15, // 44: joblet.NetworkService.RemoveNetwork:output_type -> joblet.RemoveNetworkRes
	19, // 45: joblet.VolumeService.CreateVolume:output_type -> joblet.CreateVolumeRes
	23, // 46: joblet.VolumeService.ListVolumes:output_type -> joblet.Volumes
	21, // 47: joblet.VolumeService.RemoveVolume:output_type -> joblet.RemoveVolumeRes
	24, // 48: joblet.MonitoringService.GetSystemStatus:output_type -> joblet.SystemStatusRes
	25, // 49: joblet.MonitoringService.StreamSystemMetrics:output_type -> joblet.SystemMetricsRes
	37, // [37:50] is the sub-list for method output_type
	24, // [24:37] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_joblet_proto_init() }
func file_joblet_proto_init() {
	if File_joblet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_joblet_proto_rawDesc), len(file_joblet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_joblet_proto_goTypes,
		DependencyIndexes: file_joblet_proto_depIdxs,
		MessageInfos:      file_joblet_proto_msgTypes,
	}.Build()
	File_joblet_proto = out.File
	file_joblet_proto_goTypes = nil
	file_joblet_proto_depIdxs = nil
}
